<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.test.demo</groupId>
  <artifactId>seleniumDemo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>seleniumDemo</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <argLine>-Dfile.encoding=UTF-8</argLine>
    <xmlFileName>testNG.xml</xmlFileName>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>
    
        <!-- https://mvnrepository.com/artifact/org.testng/testng -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>6.11</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>3.14.0</version>
      <scope>compile</scope>
      <!--
      scope标签中对应值的解释：
      * compile，缺省值，适用于所有阶段，会随着项目一起发布。
      * provided，类似 compile，期望 JDK、容器或使用者会提供这个依赖。如 servlet.jar。
      * runtime，只在运行时使用，如 JDBC 驱动，适用运行和测试阶段。
      * test，只在测试时使用，用于编译和运行测试代码。不会随项目发布。
      * system，类似 provided，需要显式提供包含依赖的 jar， Maven 不会在 Repository 中查找它。
      -->
    </dependency>


    <!-- https://mvnrepository.com/artifact/com.google.inject/guice -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>4.1.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/velocity/velocity-dep -->
    <dependency>
      <groupId>velocity</groupId>
      <artifactId>velocity-dep</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>org.uncommons</groupId>
      <artifactId>reportng</artifactId>
      <version>1.1.4</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.testng</groupId>
          <artifactId>testng</artifactId>
        </exclusion>
      </exclusions>
    </dependency>


  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <compilerArgs>
              <arg>-Xlint:unchecked</arg>
              <arg>-Xlint:deprecation </arg>
              <!--<arg>endorseddirs=${endorsed.dir}</arg>-->
            </compilerArgs>
          </configuration>
        </plugin>

        <!-- 添加插件 关联testNg.xml -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.17</version>
          <configuration>
            <testFailureIgnore>true</testFailureIgnore>
            <suiteXmlFiles>
              <suiteXmlFile>src/test/java/testNG.xml</suiteXmlFile>
            </suiteXmlFiles>
            <properties>
              <!--刚开始这里没有设置默认监听false，所以没有启用reportNG功能。-->
              <property>
                  <name>usedefaultlisteners</name>
                  <value>false</value>
              </property>

              <!--Setting ReportNG listener-->
              <property>
                  <name>listener</name>
                  <value>org.uncommons.reportng.HTMLReporter, org.uncommons.reportng.JUnitXMLReporter</value>
              </property>

            </properties>
            <workingDirectory>target/</workingDirectory>
            <forkMode>always</forkMode>
          </configuration>
        </plugin>
        
      </plugins>
    </pluginManagement>
  </build>
</project>
